<?php
/**
 * Created by PhpStorm.
 * User: vlson
 * Date: 2019/5/5
 * Time: 15:20
 */

namespace frontend\controllers;

use Yii;
use common\models\Article;

class BlogController extends PublicController
{
    /**
     * @return array
     */
    public function behaviors()
    {
        return parent::behaviors(); // TODO: Change the autogenerated stub
    }

    public function actionIndex(){
        $blog_list = Article::find()
            ->select(['id', 'title', 'abstract', 'cover', 'label', 'created_at'])
            ->where(['status'=>1])
            ->orderBy(["created_at"=>SORT_DESC])
            ->asArray()
            ->limit(5)
            ->all();

        return $this->render('index', [
            "blog_list"  =>  $blog_list,
        ]);
    }

    public function actionArticle(){
        $id = Yii::$app->request->get('id');
        $article = Article::find()
            ->select(['id', 'title', 'abstract', 'content_html', 'cover', 'label', 'created_at'])
            ->where(['id'=>$id, 'status'=>1])
            ->asArray()
            ->one();
        if(!$article){
            return $this->redirect(['index']);
        }

        $prev_art = Article::find()
            ->select(['id', 'title', 'abstract', 'cover', 'created_at'])
            ->where(['status'=>1])
            ->andFilterWhere(['<', 'id', $id])
            ->orderBy(['id'=>SORT_DESC])
            ->asArray()
            ->one();

        $next_art = Article::find()
            ->select(['id', 'title', 'abstract', 'cover', 'created_at'])
            ->where(['status'=>1])
            ->andFilterWhere(['>', 'id', $id])
            ->orderBy(['id'=>SORT_ASC])
            ->asArray()
            ->one();

        return $this->render('article', [
            'article'   =>  $article,
            'prev_art'   =>  $prev_art,
            'next_art'   =>  $next_art,
        ]);
    }
}